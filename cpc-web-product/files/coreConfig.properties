logging.config=${ZSMART_HOME}/etc/logback.xml

#spring.messages.basename = ${ZSMART_HOME}/resource
cpc.project.id=
#日志上报
ftf.zcm.zmq-enabled=false
ftf.zcm.zmq-namesrv-add=
## 只能取oracle/mysql
ftf.mybatis.cpc.mapperType=mysql
ftf.mybatis.auto=true
ftf.mybatis.mapper-locations = classpath*:mybatis/mapper/${ftf.mybatis.cpc.mapperType}/**/*.xml
ftf.mybatis.map-underscore-to-camel-case=true
ftf.mybatis.map-underscore-to-camel-case-for-result-set=true
app.security.develop-mode=true
#\u662f\u5426\u542f\u7528\u83dc\u5355restful\u670d\u52a1\u8bf7\u6c42\u7684\u8bbf\u95ee\u63a7\u5236\u6821\u9a8c
app.security.enable-acl=false
#\u662f\u5426\u542f\u7528\u754c\u9762\u5143\u7d20restful\u670d\u52a1\u8bf7\u6c42\u7684\u8bbf\u95ee\u63a7\u5236\u6821\u9a8c
app.security.enable-cacl=true
#\u662f\u5426\u542f\u7528\u57fa\u4e8e\u89d2\u8272\u7684\u670d\u52a1\u6743\u9650\u63a7\u5236
app.security.enable-rbac=true
#1820809 跳过CSRF校验的url，以'/'开头,多个url以'|'分隔；全部排出可以配置成/.*。Csrftoken在登录之后生成存放到session里面，每次请求都会设置到请求头里面到后台校验，文件上传一般通过表单提交，不走框架封装的RestApi，需要特别注意。
app.security.csrf-url-skip=/.*



#开启存储型XSS预防校验，开启之后会启用全局的XSS过滤器，将前台传入的特殊字符屏蔽掉，防止存储到数据库里面（XSS预防建议在前台输出时转义处理，业务产品工作量会比较大，这也是根本的解决方式，通过XSS过滤器只是作为补充，不能覆盖到所有的XSS攻击场景，开启这个功能对性能有影响，对于安全等级要求不高的可以不用开启）
app.security.enable-xss = true

#序列化设置

#申请单附件
attachment.apply.limit.type = gif|jpeg|png|doc|docx|xls|txt|pdf|xlsx|pptx|ppt|ppsx|jpg
attachment.apply.localDir = /temp/
attachment.apply.maxSize = 4
attachment.apply.cloud.remoteDir = /opt/cloud-test/scd_balcvc/
